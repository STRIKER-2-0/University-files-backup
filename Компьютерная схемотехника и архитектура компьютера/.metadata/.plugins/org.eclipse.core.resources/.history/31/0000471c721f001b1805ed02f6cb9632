#include "stm32f4xx.h"
#include "stm32f4xx_gpio.h"
#include "stm32f4xx_rcc.h"
#include "stm32f4xx_tim.h"
#include "misc.h"
#include "init.h"

enum State{
	LED4,
	LED3,
	LED5,
	LED6
};

static enum State state = LED4;

void logic(int brightness){
	switch(state){
		case LED4:
			TIM4->CCR1 = 333 - (brightness + 333 / 2) % 333;
			break;
		case LED3:
			TIM4->CCR2 = 333 - (brightness + 499 / 2) % 333;
			break;
		case LED5:
			TIM4->CCR3 = 333 - (brightness + 0) % 333;
			break;
		case LED6:
			TIM4->CCR4 = 333 - (brightness + 166 / 2) % 333;
			break;
		default:
			state = LED4;
			brightness = 0;
			break;
	}
}

int main(void){
	init();
	int brightness = 0;
	while(1){
		brightness++;
		logic(brightness);
	}
}

void TIM2_IRQHandler(void) {
    if (TIM_GetITStatus(TIM2, TIM_IT_Update) != RESET) {
        TIM_ClearITPendingBit(TIM2, TIM_IT_Update);
        state++;
    }
}
/*
void GPIO_Config(void) {
	// инициализация входа, подключенного к светодиоду
	GPIO_InitTypeDef gpioConf;
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
	gpioConf.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15;
	gpioConf.GPIO_Mode = GPIO_Mode_OUT;
	gpioConf.GPIO_Speed = GPIO_Speed_100MHz;
	gpioConf.GPIO_OType = GPIO_OType_PP;
	gpioConf.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_Init(GPIOD, &gpioConf);
}*/



/*

void INTTIM_Config(void);
void GPIO_Config(void);

int main(void) {

	GPIO_Config();
	INTTIM_Config();



}
*/



